####Docker教程
#   https://www.runoob.com/docker/docker-tutorial.html

####Docker 架构
#    镜像（Image）：Docker 镜像（Image），就相当于是一个 root 文件系统。
        比如官方镜像 ubuntu:16.04 就包含了完整的一套 Ubuntu16.04 最小系统的 root 文件系统。
#    容器（Container）：镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。
        容器可以被创建、启动、停止、删除、暂停等。
#    仓库（Repository）：仓库可看着一个代码控制中心，用来保存镜像。

####Dockerfile
#   Dockerfile 是一个用来构建镜像的文本文件，文本内容包含了一条条构建镜像所需的指令和说明。

####Docker Compose

####Docker Machine
#   Docker Machine 是一种可以让您在虚拟主机上安装 Docker 的工具，并可以使用 docker-machine 命令来管理主机。
    Docker Machine 也可以集中管理所有的 docker 主机，比如快速的给 100 台服务器安装上 docker。

####Docker Swarm
#   Docker Swarm 是 Docker 的集群管理工具。
    它将 Docker 主机池转变为单个虚拟 Docker 主机。
    Docker Swarm 提供了标准的 Docker API，所有任何已经与 Docker 守护程序通信的工具都可以使用 Swarm 轻松地扩展到多个主机。

####常用命令

##镜像命令
#   列出镜像列表
    docker images
#   查找镜像
    docker search httpd
#   获取镜像
    docker pull ubuntu
#   删除镜像
    docker rmi hello-world

##容器命令
#   查看所有的容器命令
    docker ps -a
#   启动容器
    docker run -it ubuntu /bin/bash
#   后台运行容器
    docker run -itd --name ubuntu-test ubuntu /bin/bash
#   启动一个已停止的容器
    docker start CONTAINER_ID
#   进入容器
    docker attach
    docker exec     //推荐大家使用 docker exec 命令，因为此退出容器终端，不会导致容器的停止。
    docker attach CONTAINER_ID
    docker exec -it CONTAINER_ID /bin/bash
#   导出和导入容器
    docker export 1e560fca3906 > ubuntu.tar
    cat docker/ubuntu.tar | docker import - test/ubuntu:v1
    docker import http://example.com/exampleimage.tgz example/imagerepo
#   删除容器
    docker rm -f 1e560fca3906
#   清理掉所有处于终止状态的容器
    docker container prune -f
#   运行交互式的容器
    docker run -i -t ubuntu:15.10 /bin/bash
#   启动容器（后台模式）
    docker run -d ubuntu:15.10 /bin/sh -c "while true; do echo hello world; sleep 1; done"
    docker ps   //查看进程
    docker logs CONTAINER_ID  //查看容器内的标准输出
    docker stop //停止容器

##其他命令
#   帮助模式
    docker stats --help
##  运行一个web应用
    docker pull training/webapp     //载入镜像
    docker run -d -P training/webapp python app.py
    docker run -d -p 5000:5000 training/webapp python app.py    //-p设置指定端口
#   网络端口的快捷方式
    docker port bf08b7f2cd89
#   查看 WEB 应用程序日志
    docker logs -f bf08b7f2cd89     //-f保持刷新
#   检查 WEB 应用程序
    docker inspect 875ce88edca2

##Docker仓库管理
#   docker login
#   docker logout


